name: Build and Deploy Docker Image

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository to access the files
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Docker Buildx (optional, for multi-architecture builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push the Docker image to Docker Hub
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/newstaticone:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/newstaticone:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy Docker container on EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ec2-user  # Change if your username is different
        run: |
          ls -la
          chmod 400 private_key.pem   
          # Connect to the EC2 instance and pull the latest Docker image
          ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST << 'EOF'
            # Pull the latest Docker image
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/newstaticone:latest
            # Stop and remove the old container
            docker stop staticone || true
            docker rm staticone || true
            # Run the new container
            docker run -d -p 8090:80 --name staticone ${{ secrets.DOCKERHUB_USERNAME }}/newstaticone:latest
          EOF

          # Clean up
          rm private_key.pem
